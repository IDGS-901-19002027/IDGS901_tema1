@model IDGS901_tema1.Models.Triangulo

@{
    ViewBag.Title = "Area";
}
<div class="container">
    <div class="row">
        <h2>Área del Triángulo</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h4>Ingrese las coordenadas</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.x1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.x1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.x1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.y1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.y1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.y1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.x2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.x2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.x2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.y2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.y2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.y2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.x3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.x3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.x3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.y3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-6">
                    @Html.EditorFor(model => model.y3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.y3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mt-2">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Calcular área" class="btn btn-success form-control" />
                </div>
            </div>

        }

        @if (Model != null)
        {
            <div class="col-lg-6 mt-4">
                <h4>Resultados:</h4>
                <hr />
                <p>Área: @Model.resultado</p>
                <p>Tipo de triángulo: @Model.tipo</p>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
